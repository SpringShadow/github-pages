(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{172:function(t,a,e){"use strict";e.r(a);var s=e(0),r=Object(s.a)({},function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("div",{staticClass:"content"},[t._m(0),t._v(" "),e("p",[t._v("前端性能优化一直是前端开发者在工作中比较重要的一个部分,随着前后端的分离，前端在项目中的比重越来越大，\n因此前端的性能优化也显得更加的复杂，其优化的空间也变得更大，因此对前端的技术要求也更高了。")]),t._v(" "),e("p",[t._v("那么前端可以做哪些性能优化呢")]),t._v(" "),t._m(1),t._v(" "),e("p",[t._v("首屏加载的时间，指的是打开网站到网站第一个页面出现的时间，这个时间对于用户来说，是十分重要的。\n如果首屏加载时间很慢，那么往往就会流失很多的用户。那么怎么减少首屏加载时间呢？可以从如下几个方面进行优化:")]),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),e("p",[t._v("浏览器（谷歌浏览器，其他的不一定是这样）的渲染过程大致为：构建DOM--\x3e构建CSSOM--\x3e生成Render Tree--\x3e Layout(布局)--\x3ePainting(绘制),\n知道了浏览器的渲染机制，我们把css文件放在head里，能尽快的加载css构建CSSOM,而把JavaScript文件放底部，是因为JavaScript代码如果操作了\nDOM和CSS则会重新导致页面的重排和重绘，进而影响首屏加载的时间。")]),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),e("p",[t._v("图片懒加载：当网站图片比较大或者比较多的时候，使用一些较小的图片代替真正的图片，当真实的图片加载好之后再替换掉原先的代替的图片，\n这样就可以避免用户一直在等待图片的加载过程，加快网站显示的速度。")]),t._v(" "),t._m(12),t._v(" "),e("p",[t._v("图片预加载：在做单页面应用，特别是一些动画比较多的H5页面的时候，为了动画的流畅性，我们往往会将网站要用到的图片提前进行加载，\n等要用到的图片全部加载完成之后，再进入网站首页，因此往往需要在进入首页之前，做一个loading页面，显示网站资源加载的进度，\n这样可以让用户知道网站正在加载资源，避免用户的大量流失。")]),t._v(" "),e("p",[t._v("关于图片懒加载和预加载的方法和插件，图片懒加载中"),e("code",[t._v("vue-lazyload")]),t._v("这个插件比较好用，\n图片预加载，我在之前的文章中 "),e("router-link",{attrs:{to:"./../javascript/preload.html"}},[t._v("图片预加载")]),t._v("有写到过图片的预加载的案例，大家可以进行参考。")],1),t._v(" "),t._m(13),t._v(" "),e("p",[t._v("在很多项目中，图片资源往往作为网站的一个比较大的资源，其优化的空间也比较大，以往很多图片都是在服务端进行压缩，\n其实这一步完全可以在前端来完成，从而来减少服务端的压力。前端压缩图片，主要是借助于一些图片压缩软件，一般情况可以\n压缩50%-70%左右，从而可以大大减少服务端的压力。")]),t._v(" "),t._m(14),t._v(" "),e("p",[t._v("现在项目开发很多都是前后端分离、模块化、组件化的的方式，那么在多页面应用中，往往很多的代码，是可以进行共用的，\n将这些公共的代码进行提取，缓存，这样可以减少一些不必要的资源加载。")]),t._v(" "),t._m(15),t._v(" "),e("p",[t._v("相对于重排，重绘的性能开销要小很多，因此在用户交互方面上，我们要尽可能的减少重排，比如\n我们再做动画的时候，尽量改变transform和opacity来做动画，而不是改变其宽高，距离或是显示与否来做动画。")]),t._v(" "),e("p",[t._v("在做动画的时候，可以利用客户端的GPU来对动画进行加速，这样动画具有更好的流畅性。")]),t._v(" "),e("p",[t._v("使用CSS3代码代替JS动画（尽可能避免重绘重排以及回流）。")]),t._v(" "),e("p",[t._v("禁止使用gif图片实现loading效果（降低CPU消耗，提升渲染性能）")]),t._v(" "),t._m(16),t._v(" "),e("p",[t._v("当页面中数据量比较大的时候，请求的接口比较多的时候，从后台获取数据到数据显示在页面的时间会比较长，\n因此如果能将一部分数据进行缓存的话，页面要显示的数据直接从本地缓存中读取，同时我们也要考虑到数据的时效性，就是什么时候数据会过期，\n比如当用户进入到页面的时候，对比之前从数据库请求数据的时间和本次请求数据的时间，如果时间在有效期呢，那么就读取本地的缓存的数据，\n否则直接从数据库中读取。")]),t._v(" "),e("p",[t._v("前端性能优化，远远不止这些，以上这些是一些常用的性能优化方式，在实际的项目中，还有很多地方可以进行优化，比如css代码的编写、\ncss选择器的使用、批量增删dom、对高频触发的事件进行节流或消抖、还有服务器端渲染（SSR）、还有前端的安全防范等等，\n因此前端性能优化是一个任重道远、不断完善的任务。")])])},[function(){var t=this.$createElement,a=this._self._c||t;return a("h1",{attrs:{id:"前端性能优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前端性能优化","aria-hidden":"true"}},[this._v("#")]),this._v(" 前端性能优化")])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"减少首屏加载时间"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#减少首屏加载时间","aria-hidden":"true"}},[this._v("#")]),this._v(" 减少首屏加载时间")])},function(){var t=this.$createElement,a=this._self._c||t;return a("h3",{attrs:{id:"_1、减少dom元素数量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、减少dom元素数量","aria-hidden":"true"}},[this._v("#")]),this._v(" 1、减少DOM元素数量")])},function(){var t=this.$createElement,a=this._self._c||t;return a("p",[this._v("DOM的加载和显示是比较耗时的，需要浏览器对DOM结构进行分析，\n计算，绘制DOM树，挂载内容等，这些操作大都比较耗时。"),a("code",[this._v("尽量减少DOM的嵌套层数、使用伪类元素代替不必要的DOM")]),this._v("等这些都可以减少DOM元素数量。")])},function(){var t=this.$createElement,a=this._self._c||t;return a("h3",{attrs:{id:"_2、css文件放在head-javascript文件放底部"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、css文件放在head-javascript文件放底部","aria-hidden":"true"}},[this._v("#")]),this._v(" 2、css文件放在head,JavaScript文件放底部")])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"减少http请求数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#减少http请求数","aria-hidden":"true"}},[this._v("#")]),this._v(" 减少HTTP请求数")])},function(){var t=this.$createElement,a=this._self._c||t;return a("h3",{attrs:{id:"_1、代码压缩合并"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、代码压缩合并","aria-hidden":"true"}},[this._v("#")]),this._v(" 1、代码压缩合并")])},function(){var t=this.$createElement,a=this._self._c||t;return a("h3",{attrs:{id:"_2、小图标等用iconfont代替"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、小图标等用iconfont代替","aria-hidden":"true"}},[this._v("#")]),this._v(" 2、小图标等用iconfont代替")])},function(){var t=this.$createElement,a=this._self._c||t;return a("h3",{attrs:{id:"_3、使用base64格式的图片"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、使用base64格式的图片","aria-hidden":"true"}},[this._v("#")]),this._v(" 3、使用base64格式的图片")])},function(){var t=this.$createElement,a=this._self._c||t;return a("h3",{attrs:{id:"_4、css雪碧图（实际项目中使用的频率比较低）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、css雪碧图（实际项目中使用的频率比较低）","aria-hidden":"true"}},[this._v("#")]),this._v(" 4、css雪碧图（实际项目中使用的频率比较低）")])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"图片懒加载和预加载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#图片懒加载和预加载","aria-hidden":"true"}},[this._v("#")]),this._v(" 图片懒加载和预加载")])},function(){var t=this.$createElement,a=this._self._c||t;return a("h3",{attrs:{id:"_1、图片懒加载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、图片懒加载","aria-hidden":"true"}},[this._v("#")]),this._v(" 1、图片懒加载")])},function(){var t=this.$createElement,a=this._self._c||t;return a("h3",{attrs:{id:"_2、图片预加载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、图片预加载","aria-hidden":"true"}},[this._v("#")]),this._v(" 2、图片预加载")])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"图片压缩"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#图片压缩","aria-hidden":"true"}},[this._v("#")]),this._v(" 图片压缩")])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"提取公共代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#提取公共代码","aria-hidden":"true"}},[this._v("#")]),this._v(" 提取公共代码")])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"减少重绘和重排-gpu加速"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#减少重绘和重排-gpu加速","aria-hidden":"true"}},[this._v("#")]),this._v(" 减少重绘和重排 GPU加速")])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"数据缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据缓存","aria-hidden":"true"}},[this._v("#")]),this._v(" 数据缓存")])}],!1,null,null,null);a.default=r.exports}}]);